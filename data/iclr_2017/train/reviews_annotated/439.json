{"conference": "ICLR 2017 conference submission", "title": "DeepCoder: Learning to Write Programs", "abstract": "We develop a first line of attack for solving programming competition-style problems from input-output examples using deep learning. The approach is to train a neural network to predict properties of the program that generated the outputs from the inputs. We use the neural network's predictions to augment search techniques from the programming languages community, including enumerative search and an SMT-based solver. Empirically, we show that our approach leads to an order of magnitude speedup over the strong non-augmented baselines and a Recurrent Neural Network approach, and that we are able to solve problems of difficulty comparable to the simplest problems on programming competition websites.", "histories": [], "reviews": [{"ORIGINALITY": 3, "CLARITY": 4, "is_meta_review": false, "comments": "The paper presents a technique to combine deep learning style input-output training with search techniques to match the input of a program to the provided output. Orders of magnitude speedup over non-", "IS_META_REVIEW": false}, {"IMPACT": 5, "comments": "This is a good paper, well written, that presents a simple but effective approach to predict code properties from input output pairs. The experiments show superiority to the baseline, with speedup fac", "IS_META_REVIEW": false, "RECOMMENDATION": 4, "CLARITY": 5, "is_meta_review": false}, {"ORIGINALITY": 4, "is_meta_review": false, "comments": "This paper presents an approach to learn to generate programs. Instead of directly trying to generate the program, the authors propose to train a neural net to estimate a fix set of attributes, which ", "IS_META_REVIEW": false}], "authors": "Matej Balog, Alexander L. Gaunt, Marc Brockschmidt, Sebastian Nowozin, Daniel Tarlow", "accepted": true, "id": "439"}