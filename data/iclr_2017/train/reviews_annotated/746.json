{"conference": "ICLR 2017 conference submission", "title": "Divide and Conquer with Neural Networks", "abstract": "We consider the learning of algorithmic tasks by mere observation of input-output pairs.  Rather than studying this as a black-box discrete regression problem with no assumption whatsoever  on the input-output mapping, we concentrate on tasks that are amenable to the principle of divide and conquer, and study what are its implications in terms of learning.   This principle creates a powerful inductive bias that we exploit with neural architectures that are defined recursively, by learning two scale-invariant atomic operators: how to split a given input into two disjoint sets, and how to merge two partially solved tasks into a larger partial solution. The scale invariance creates parameter sharing across all stages of the architecture, and the dynamic design creates architectures whose complexity can be tuned in a differentiable manner.  As a result, our model is trained by backpropagation not only to minimize the errors at the output, but also to do so as efficiently as possible, by enforcing shallower computation graphs. Moreover, thanks to the scale invariance, the model can be trained only with only input/output pairs, removing the need to know oracle intermediate split and merge decisions. As it turns out, accuracy and complexity are not independent qualities, and we verify empirically that when the learnt complexity matches the underlying complexity of the task, this results in higher accuracy and better generalization in two paradigmatic problems: sorting and finding planar convex hulls.", "histories": [], "reviews": [{"IMPACT": 5, "comments": "I find this paper extremely hard to read. The main promise of the paper is to train models for combinatorial search procedures, especially for dynamic programming to learn where to split and merge. Th", "ORIGINALITY": 5, "is_meta_review": false, "CLARITY": 1, "IS_META_REVIEW": false}, {"IMPACT": 3, "MEANINGFUL_COMPARISON": 4, "comments": "The basic idea of this contribution is very nice and worth pursuing: how to use the powerful divide and conquer algorithm design strategy to learn better programs for tasks such as sorting or planar c", "ORIGINALITY": 4, "is_meta_review": false, "CLARITY": 3, "IS_META_REVIEW": false}, {"is_meta_review": false, "comments": "I was holding off on this review hoping to get the missing details from the code at", "IS_META_REVIEW": false}], "authors": "Alex Nowak, Joan Bruna", "accepted": false, "id": "746"}