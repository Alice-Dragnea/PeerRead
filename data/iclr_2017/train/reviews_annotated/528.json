{"conference": "ICLR 2017 conference submission", "title": "Neural Functional Programming", "abstract": "We discuss a range of modeling choices that arise when constructing an end-to-end differentiable programming language suitable for learning programs from input-output examples. Taking cues from programming languages research, we study the effect of memory allocation schemes, immutable data, type systems, and built-in control-flow structures on the success rate of learning algorithms. We build a range of models leading up to a simple differentiable functional programming language. Our empirical evaluation shows that this language allows to learn far more programs than existing baselines.", "histories": [], "reviews": [{"SUBSTANCE": 3, "is_meta_review": false, "comments": "The paper discusses a range of modelling choices for designing differentiable programming languages. Authors propose 4 recommendations that are then tested on a set of 13 algorithmic tasks for lists, ", "IS_META_REVIEW": false}, {"IMPACT": 4, "SUBSTANCE": 3, "comments": "The paper proposes a set of recommendations for the design of differentiable programming languages, based on what made gradient descent more successful in experiments. I must say im no expert in progr", "SOUNDNESS_CORRECTNESS": 5, "ORIGINALITY": 4, "is_meta_review": false, "RECOMMENDATION": 3, "IS_META_REVIEW": false}, {"comments": "The authors talk about design choice recommendations for performing program induction via gradient descent, basically advocating reasonable programming language practice (immutable data, higher-order ", "SOUNDNESS_CORRECTNESS": 3, "ORIGINALITY": 3, "is_meta_review": false, "RECOMMENDATION": 2, "CLARITY": 2, "IS_META_REVIEW": false}, {"IMPACT": 3, "is_meta_review": false, "comments": "This paper presents small but important modifications which can be made to differentiable programs to improve learning on them. Overall these modifications seem to substantially improve convergence of", "IS_META_REVIEW": false}, {"MEANINGFUL_COMPARISON": 5, "comments": "This paper presents design decisions of TerpreT [1] and experiments about learning simple loop programs and list manipulation tasks. The TerpreT line of work (is one of those which) bridges the gap be", "IS_META_REVIEW": false, "RECOMMENDATION": 4, "CLARITY": 4, "is_meta_review": false}], "authors": "John K. Feser, Marc Brockschmidt, Alexander L. Gaunt, Daniel Tarlow", "accepted": false, "id": "528"}